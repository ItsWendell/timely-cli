{"version":3,"sources":["../src/http.js"],"names":["axios","api","create","baseURL","process","env","TIMELY_API_HOST","updateAccessToken","token","type","defaults","headers","common","Authorization"],"mappings":";;;;;;;AAAA;;;;;;AAEA;;;kBAGeA,e;;AAEf;;;;AAGO,IAAMC,oBAAMD,gBAAME,MAAN,CAAa;AAC/BC,WAASC,QAAQC,GAAR,CAAYC;AADU,CAAb,CAAZ;;AAIP;;;;;;;AAOAL,IAAIM,iBAAJ,GAAwB,UAACC,KAAD,EAA4B;AAAA,MAApBC,IAAoB,uEAAb,QAAa;;AACnD,MAAID,KAAJ,EAAW;AACVP,QAAIS,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA+CJ,IAA/C,SAAuDD,KAAvD;AACA,GAFD,MAEO;AACN,WAAOP,IAAIS,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAAnC;AACA;AACD,CAND","file":"http.js","sourcesContent":["import axios from 'axios';\n\n/**\n * Export a plain axios reference to use in any non-api call.\n */\nexport default axios;\n\n/**\n * Create a preconfigured axios instance to use in all api calls.\n */\nexport const api = axios.create({\n\tbaseURL: process.env.TIMELY_API_HOST,\n});\n\n/**\n * Update the api axios instance with the latest access token.\n *\n * @param  {string?} token\n * @param  {string}  [type='Bearer']\n * @return {void}\n */\napi.updateAccessToken = (token, type = 'Bearer') => {\n\tif (token) {\n\t\tapi.defaults.headers.common.Authorization = `${type} ${token}`;\n\t} else {\n\t\tdelete api.defaults.headers.common.Authorization;\n\t}\n};\n"]}