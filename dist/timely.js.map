{"version":3,"sources":["../src/timely.js"],"names":["TimelyAPI","url","URL","process","env","TIMELY_API_HOST","credentials","client","id","TIMELY_APP_ID","secret","TIMELY_APP_SECRET","auth","tokenHost","origin","tokenPath","pathname","revokePath","authorizePath","OAuthClient","create","accessTokens","activeAccountId","activeProjectId","accounts","storage","init","getItem","account","getAccounts","project","getProjects","console","log","setItem","authorizationCode","authorizeURL","redirect_uri","token","Promise","resolve","reject","tokens","accessToken","expired","refresh","then","saveTokens","setApiHeaders","loadStorageStates","catch","error","clear","setAccountId","setProjectId","api","updateAccessToken","access_token","code","getToken","get","data","forEach","projects","name","undefined","activeAccount","date","endDate","entries","params","day","format","moment","HTML5_FMT","DATE","entry","EventEmitter"],"mappings":"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","file":"timely.js","sourcesContent":["import OAuthClient from 'simple-oauth2';\nimport storage from 'node-persist';\nimport { EventEmitter } from 'events';\nimport { URL } from 'url';\nimport { api } from './http';\nimport moment, { relativeTimeThreshold } from 'moment';\n\nclass TimelyAPI extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t\tconst url = new URL(process.env.TIMELY_API_HOST || 'https://api.timelyapp.com/1.1/');\n\t\tthis.credentials = {\n\t\t\tclient: {\n\t\t\t\tid: process.env.TIMELY_APP_ID,\n\t\t\t\tsecret: process.env.TIMELY_APP_SECRET,\n\t\t\t},\n\t\t\tauth: {\n\t\t\t\ttokenHost: url.origin,\n\t\t\t\ttokenPath: `${url.pathname}/oauth/token`,\n\t\t\t\trevokePath: `${url.pathname}/oauth/revoke`,\n\t\t\t\tauthorizePath: `${url.pathname}/oauth/authorize`,\n\t\t\t},\n\t\t};\n\t\tthis.auth = OAuthClient.create(this.credentials);\n\t\tthis.accessTokens = null;\n\t\tthis.activeAccountId = null;\n\t\tthis.activeProjectId = null;\n\t\tthis.accounts = {};\n\t}\n\n\tasync loadStorageStates() {\n\t\ttry {\n\t\t\tawait storage.init();\n\t\t\tthis.activeAccountId = await storage.getItem('accountId');\n\t\t\tthis.activeProjectId = await storage.getItem('projectId');\n\n\t\t\tif (this.activeAccountId && !this.account) {\n\t\t\t\tawait this.getAccounts();\n\t\t\t}\n\n\t\t\tif (this.activeProjectId && !this.project) {\n\t\t\t\tawait this.getProjects();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log('Error loading presisted states', error);\n\t\t}\n\t}\n\n\tsetProjectId(id) {\n\t\tstorage.setItem('projectId', id);\n\t\tthis.activeProjectId = id;\n\t}\n\n\tsetAccountId(id) {\n\t\tstorage.setItem('accountId', id);\n\t\tthis.activeAccountId = id;\n\t}\n\n\tget account() {\n\t\tif (this.activeAccountId && this.accounts[this.activeAccountId]) {\n\t\t\treturn this.accounts[this.activeAccountId];\n\t\t}\n\t}\n\n\tget project() {\n\t\tif (this.activeProjectId &&\n\t\t\tthis.accounts[this.activeAccountId] &&\n\t\t\tthis.accounts[this.activeAccountId]\n\t\t\t\t.projects[this.activeProjectId]) {\n\t\t\treturn this.accounts[this.activeAccountId]\n\t\t\t\t.projects[this.activeProjectId];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tauthorizeURL() {\n\t\treturn this.auth.authorizationCode.authorizeURL({\n\t\t\tredirect_uri: 'urn:ietf:wg:oauth:2.0:oob',\n\t\t});\n\t}\n\n\tsaveTokens() {\n\t\tstorage.setItem('tokens', this.accessTokens.token);\n\t}\n\n\tauthenticate() {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst tokens = await storage.getItem('tokens');\n\t\t\tif (!tokens) {\n\t\t\t\treject();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.accessTokens = this.auth.accessToken.create(tokens);\n\t\t\tif (this.accessTokens.expired()) {\n\t\t\t\tthis.accessTokens.refresh().then(async (tokens) => {\n\t\t\t\t\tthis.accessTokens = tokens;\n\t\t\t\t\tthis.saveTokens();\n\t\t\t\t\tthis.setApiHeaders();\n\t\t\t\t\tawait this.loadStorageStates();\n\t\t\t\t\tresolve();\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setApiHeaders();\n\t\t\t\tawait this.loadStorageStates();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tasync logout() {\n\t\tstorage.clear();\n\t\tthis.setAccountId(null);\n\t\tthis.setProjectId(null);\n\t\tthis.accessTokens = null;\n\t}\n\n\tsetApiHeaders() {\n\t\tapi.updateAccessToken(this.accessTokens.token.access_token);\n\t}\n\n\tauthorize(code) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.auth.authorizationCode.getToken({\n\t\t\t\tcode,\n\t\t\t\tredirect_uri: 'urn:ietf:wg:oauth:2.0:oob',\n\t\t\t}).then((tokens) => {\n\t\t\t\tthis.accessTokens = this.auth.accessToken.create(tokens);\n\t\t\t\tconsole.log('Succesfully logged in!', this.accessTokens.token);\n\t\t\t\tthis.saveTokens();\n\t\t\t\tresolve();\n\t\t\t}).catch((error) => {\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tgetAccounts() {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst { data: accounts } = await api.get('/accounts');\n\t\t\t\taccounts.forEach((account) => {\n\t\t\t\t\tthis.accounts[account.id] = account;\n\t\t\t\t\tthis.accounts[account.id].projects = {};\n\t\t\t\t});\n\t\t\t\tresolve(this.accounts);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCurrentAccountName() {\n\t\tif (this.activeAccountId && this.accounts[this.activeAccountId]) {\n\t\t\treturn this.accounts[this.activeAccountId].name;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetCurrentUser() {\n\t\treturn api.get(`/${this.activeAccount}/users/current`);\n\t}\n\n\tgetProjects() {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst { data: projects } = await api.get(`/${this.account.id}/projects`);\n\t\t\t\tprojects.forEach((project) => {\n\t\t\t\t\tthis.accounts[this.activeAccountId].projects[project.id] = project;\n\t\t\t\t});\n\t\t\t\tresolve(this.accounts[this.activeAccountId].projects);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetEntries(date, endDate = null) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet entries = {};\n\t\t\t\tif (!endDate) {\n\t\t\t\t\tconst { data: entries } = await api.get(`/${this.account.id}/events`, {\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tday: moment(date).format(moment.HTML5_FMT.DATE),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tentries.forEach((entry) => {\n\t\t\t\t\t\tentries[entry.id] = entry;\n\t\t\t\t\t});\n\t\t\t\t\tresolve(entries);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default new TimelyAPI();\n"]}